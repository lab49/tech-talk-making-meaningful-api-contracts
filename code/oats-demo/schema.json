{
  "openapi": "3.0.0",
  "info": {
    "title": "Book store example",
    "version": "1.0"
  },
  "servers": [],
  "components": {
    "schemas": {
      "BookType": {
        "type": "string",
        "enum": [
          "paperback",
          "digital",
          "audio"
        ]
      },
      "Book": {
        "type": "object",
        "required": [
          "title",
          "author",
          "bookType",
          "price"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "bookType": {
            "$ref": "#/components/schemas/BookType"
          },
          "price": {
            "type": "number"
          }
        }
      },
      "AppErrorCode": {
        "type": "string",
        "enum": [
          "generic"
        ]
      },
      "AppError": {
        "type": "object",
        "required": [
          "message",
          "code"
        ],
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "$ref": "#/components/schemas/AppErrorCode"
          }
        }
      }
    },
    "requestBodies": {
      "BookRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Book"
            }
          }
        }
      }
    },
    "responses": {
      "BookResponse": {
        "description": "A json response with a book",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Book"
            }
          }
        }
      },
      "ErrorResponse": {
        "description": "An error caused by the client",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AppError"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/books/{bookId}": {
      "parameters": [
        {
          "in": "path",
          "name": "bookId",
          "description": "The id of the book",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "getBook",
        "description": "Returns the book associated with the given bookId",
        "responses": {
          "200": {
            "$ref": "#/components/responses/BookResponse"
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "500": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "patch": {
        "operationId": "updateBook",
        "description": "Updates the book associated with the given bookId",
        "requestBody": {
          "$ref": "#/components/requestBodies/BookRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/BookResponse"
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "500": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/books": {
      "get": {
        "operationId": "getBooks",
        "responses": {
          "200": {
            "description": "Returns all the books",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "500": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "post": {
        "operationId": "createBook",
        "description": "Creates a new book based on the request body. The id field can be ommited (will be ignored)",
        "requestBody": {
          "$ref": "#/components/requestBodies/BookRequestBody"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/BookResponse"
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "500": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    }
  }
}
